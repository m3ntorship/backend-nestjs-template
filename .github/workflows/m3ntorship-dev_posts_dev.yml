name: deploy service PR
on:
  push:
    branches:
      - main

env:
  M3_PROJECT: pickify
  M3_COMPONENT: template
  M3_ENVIRONMENT: 'be-dev'
  M3_NAMESPACE: '${{github.event.organization.login}}-${{github.event.repository.name}}-dev'
  M3_DEPLOYMENT_PATH: deploy/apply
  M3_TEMP_DIR: temp
  M3_REPLICAS: '1'
  M3_MAIN_APP_PORT: 3000
  M3_MOCK_APP_PORT: 4010
  M3_PORT_BACKEND: 80
  M3_PORT_BACKEND_MOCK: 81
  M3_DOCKER_FILE: Dockerfile
  M3_IMAGE: m3ntorshipci/service-template
  M3_MOCK_IMAGE: m3ntorshipci/prism:latest
  M3_HOST_NAME: pickify.net
  M3_ELEPHANTSQL_URL: ${{secrets.ELEPHANTSQL_URL}}
  M3_SERVICE_OPENAPI_SPECIFICATION: https://raw.githubusercontent.com/m3ntorship/backend-nestjs-template/main/openapi/example.openapi.yml
  M3_NODE_ENV: production
  
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.prepare.outputs.sha }}
      version: ${{ steps.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: prepare
        run: |
          echo "::set-output name=sha::$(git rev-parse HEAD)"
          echo "::set-output name=version::$(git rev-parse --short=4 HEAD)"

  check-outputs:
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "sha ${{needs.prepare.outputs.sha}}"
          echo "version ${{needs.prepare.outputs.version}}"
          echo "m3_version $M3_VERSION"

  build:
    needs:
      - prepare
    runs-on: ubuntu-latest
    env:
      M3_VERSION: ${{ needs.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - run: yarn
      - run: yarn build
      - run: yarn test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: ${{env.M3_IMAGE}}:${{env.M3_VERSION}}
          file: ${{env.M3_DOCKER_FILE}}
          context: .
          push: true

  deploy-dev:
    needs:
      - prepare
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v1

      - name: Kubectl configuration
        shell: bash
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d -i > ~/.kube/config

      - name: install moustache
        run: |
          curl -sSL https://git.io/get-mo -o mo
          chmod +x mo
          sudo mv mo /usr/local/bin/
          echo "works" | mo

      - name: deploy-dev
        env:
          M3_VERSION: ${{needs.prepare.outputs.version}}
          SHA: ${{needs.prepare.outputs.sha}}
        run: |
          echo $M3_VERSION
          mkdir -p $M3_TEMP_DIR
          for f in $M3_DEPLOYMENT_PATH/*; do mo -u "$f" > $M3_TEMP_DIR/"$(basename $f)"; done
          kubectl apply -f $M3_TEMP_DIR
